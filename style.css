/* Import Google Font - Inter */
@import url('https://fonts.googleapis.com/css2?family=Inter:wght@400;600;700&display=swap');

/* Define CSS Variables for easy theme management */
:root {
    /* Color Palette */
    --primary-blue: #27d3f1; /* Vibrant blue for main elements and emphasis */
    --secondary-blue: #004d5a; /* Darker blue for secondary elements and borders */
    --background-dark: #061416; /* Very dark blue/green for container background */
    --body-bg-gradient-start: #147788; /* Lighter blue for body gradient start */
    --body-bg-gradient-end: #023d3d; /* Darker blue for body gradient end */
    --text-light: #cdfcff; /* Very light bluish-white for general text */
    --text-muted: #92d6d6; /* Muted teal for instructional/secondary text */
    --text-input-bg: #002a33; /* Dark background for input fields */
    --text-input-border: #004d5a; /* Border for input fields */
    --feedback-correct: #8ce99a; /* Muted pastel green for correct feedback */
    --feedback-incorrect: #ff9999; /* Muted pastel red for incorrect feedback */
    --score-lives-color: #ff6b6b; /* Red for lives text */
    --link-color: #7cebe9; /* Lighter blue for links */
    --box-shadow-light: rgba(250, 250, 250, 0.1);
    --box-shadow-dark: rgba(0, 0, 0, 0.05);

    /* Spacing */
    --padding-sm: 10px;
    --padding-md: 20px;
    --padding-lg: 30px;
    --margin-sm: 15px;
    --margin-md: 20px;
    --margin-lg: 25px;

    /* Border Radius */
    --border-radius-sm: 0.375rem; /* ~6px */
    --border-radius-md: 0.5rem; /* ~8px */
    --border-radius-lg: 0.75rem; /* ~12px */
}

/* Use a neutral font */
body {
    font-family: 'Inter', sans-serif;
    display: flex;
    justify-content: center;
    align-items: center;
    min-height: 100vh;
    /* Darker Blue Gradient Background */
    background: linear-gradient(to bottom right, var(--body-bg-gradient-start), var(--body-bg-gradient-end));
    background-size: cover;
    background-attachment: fixed;
    margin: 0;
    color: var(--text-light);
    padding: var(--padding-md); /* Add some padding for small screens */
    box-sizing: border-box; /* Include padding in total width */
}

.game-container {
    background-color: var(--background-dark);
    padding: var(--padding-lg);
    border-radius: var(--border-radius-lg);
    box-shadow: 0 10px 15px -3px var(--box-shadow-light), 0 4px 6px -2px var(--box-shadow-dark);
    text-align: center;
    max-width: 450px;
    width: 100%;
    position: relative;
    overflow: hidden;
    box-sizing: border-box;
    z-index: 1;
}

h1 {
    color: var(--primary-blue);
    margin-bottom: var(--margin-lg);
    font-weight: 600;
    font-size: 2.2em;
    text-shadow: 0px 0px 8px rgba(39, 211, 241, 0.5); /* Subtle glow */
}

.instruction-text {
    margin-bottom: var(--margin-sm);
    font-size: 1.1em;
    color: var(--text-muted);
}

.album-title {
    color: var(--text-light);
    font-size: 1.8em;
    margin: var(--margin-sm) 0 var(--margin-lg) 0;
    min-height: 1.2em; /* Reserve space to prevent layout shifts */
    word-break: break-word; /* Prevent long album titles from overflowing */
    font-weight: 600;
}

/* Input container for clear button positioning (if you add this to HTML) */
/* The current HTML doesn't have .input-container, so this will only apply if you add it.
   For now, the .clear-input-button positioning relies on .text-input's parent. */
/* .input-container {
    position: relative;
    margin-bottom: var(--margin-md);
} */

.text-input {
    padding: 12px;
    border: 1px solid var(--text-input-border);
    border-radius: var(--border-radius-sm);
    width: 100%; /* Use 100% width */
    font-size: 1em;
    box-sizing: border-box; /* Include padding and border in element's total width and height */
    transition: border-color 0.3s ease, background-color 0.3s ease;
    color: var(--text-light);
    background-color: var(--text-input-bg);
    padding-right: 40px; /* Space for clear button */
    /* Assuming artist-guess input is a direct child of game-area, its position context is game-area */
    /* If you were to wrap it in an input-container, then clear-input-button would be relative to that */
    margin-bottom: var(--margin-md); /* Added margin-bottom here for standard spacing */
}

.text-input:focus {
    outline: none;
    border-color: var(--primary-blue);
    box-shadow: 0 0 0 3px rgba(39, 211, 241, 0.3);
    background-color: #003640; /* Slightly lighter background on focus */
}

/* Clear Input Button (Ensure your JS toggles its display, or it's always hidden if input is empty) */
/* This assumes the button is a sibling or child that can be positioned relative to the input or its container */
.clear-input-button {
    position: absolute; /* This will be relative to the nearest positioned ancestor (game-container or input-container) */
    right: 10px;
    /* Adjust top based on where the clear button is in your HTML relative to .text-input */
    /* If clear button is immediately after .text-input and both are in game-area, it's trickier */
    /* If you added <div class="input-container"> around input, then 'top: 50%; transform: translateY(-50%);' works great */
    top: calc(50% + 2px); /* Slight adjustment if it's positioned globally, might need more specific HTML structure */
    transform: translateY(-50%);
    background: none;
    border: none;
    color: var(--text-muted);
    font-size: 1.5em;
    cursor: pointer;
    transition: color 0.2s ease;
    padding: 5px;
    line-height: 1;
    z-index: 2; /* Ensure it's above the input */
}

.clear-input-button:hover {
    color: var(--text-light);
}


.game-info {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: var(--margin-md);
    padding: 5px 0;
    border-bottom: 1px solid var(--secondary-blue);
}

.score-text, .lives-text {
    font-size: 1.1em;
    color: var(--text-muted);
}

.score-value {
    font-weight: 600;
    color: var(--primary-blue);
    transition: transform 0.2s ease;
    display: inline-block;
}

.score-value.score-animate {
    transform: scale(1.2);
}

.lives-value {
    font-weight: 600;
    color: var(--score-lives-color);
    transition: transform 0.2s ease;
    display: inline-block;
}

.lives-value.lives-animate {
    transform: scale(1.2);
}

.button-group {
    display: flex;
    gap: var(--padding-sm);
    justify-content: center;
    margin-bottom: var(--margin-sm);
    flex-wrap: wrap;
}


.game-button {
    padding: 12px 25px;
    border: none;
    border-radius: var(--border-radius-sm);
    cursor: pointer;
    font-size: 1.1em;
    font-weight: 600;
    transition: background-color 0.3s ease, transform 0.1s ease, box-shadow 0.3s ease;
    box-shadow: 0 4px 6px -1px var(--box-shadow-dark), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
    flex-grow: 1;
    max-width: 180px;
}

/* Primary button style (Guess, Play Again) */
.primary-button {
    background-color: var(--primary-blue);
    color: var(--background-dark); /* Dark text for contrast */
}

.primary-button:hover {
    background-color: #00b3cc; /* Darker blue */
    transform: translateY(-2px);
    box-shadow: 0 6px 10px -2px rgba(0, 0, 0, 0.2), 0 3px 5px -1px rgba(0, 0, 0, 0.1);
}

/* Secondary button style (Skip Album, Hint) */
.secondary-button {
    background-color: var(--secondary-blue);
    color: var(--text-light);
}

.secondary-button:hover {
    background-color: #003640; /* Even darker blue */
    transform: translateY(-2px);
    box-shadow: 0 6px 10px -2px rgba(0, 0, 0, 0.2), 0 3px 5px -1px rgba(0, 0, 0, 0.1);
}


.game-button:active {
    transform: translateY(0); /* Reset on click */
    box-shadow: 0 2px 4px -1px rgba(0, 0, 0, 0.1), 0 1px 2px -1px rgba(0, 0, 0, 0.06);
}

/* Ensure the "Play Again" button is visible when its class is removed by JS */
/* This will now appear below the game-area/win-message, centered */
#refresh-button.primary-button {
    display: inline-block; /* Changed from !important to allow 'hidden' to work when needed */
    margin-top: var(--margin-md); /* Add space above the button */
    /* When .hidden is removed, this will make it appear as an inline-block button */
}

/* FEEDBACK TEXT - Key to fixing conflict */
/* Feedback text will now be initially hidden by opacity 0, then JS adds correct/incorrect class */
.feedback-text {
    margin-top: var(--margin-sm);
    font-weight: 600;
    min-height: 1.2em; /* Reserve space */
    opacity: 0; /* Starts hidden, JS animates by adding class */
    transition: opacity 0.5s ease-out, color 0.5s ease-out; /* Smooth fade and color change */
    /* Do NOT set 'display: none' here. Let JS toggle classes for feedback */
}

/* Specific colors and animation for feedback */
.feedback-text.feedback-correct { /* Now requires .feedback-text AND .feedback-correct */
    color: var(--feedback-correct); /* Set directly without !important */
    opacity: 1; /* Make visible for the animation */
    animation: fadeInUp 0.5s ease-out forwards;
}

.feedback-text.feedback-incorrect { /* Now requires .feedback-text AND .feedback-incorrect */
    color: var(--feedback-incorrect); /* Set directly without !important */
    opacity: 1; /* Make visible for the animation */
    animation: fadeInUp 0.5s ease-out forwards;
}


/* Hint text specific styling */
.hint-text {
    font-size: 0.95em;
    color: var(--text-muted);
    margin-top: -5px; /* Adjust spacing with album title */
    margin-bottom: var(--margin-sm);
    padding: var(--padding-sm);
    background-color: #002a33; /* Dark background similar to input */
    border-left: 4px solid var(--primary-blue); /* Vibrant blue accent */
    border-radius: var(--border-radius-sm);
    /* Make it transition nicely when shown/hidden by JS */
    opacity: 0; /* Start hidden */
    transition: opacity 0.5s ease-in-out;
    /* JS will remove 'hidden' class and set opacity to 1 to show */
}
.hint-text:not(.hidden) { /* If it's not hidden, show it */
    opacity: 1;
}


.win-message, .game-over-message { /* Combined styles for both end messages */
    margin-top: var(--margin-md);
    padding: var(--margin-lg);
    background-color: var(--text-input-bg); /* Dark background */
    border: 1px solid var(--secondary-blue); /* Darker blue border */
    border-radius: var(--border-radius-md);
    color: var(--text-light);
    opacity: 0; /* Start hidden for animation */
    /* JS will remove 'hidden' class and let this animate */
    animation: fadeIn 0.8s ease-out forwards; /* Fade in animation for message blocks */
    line-height: 1.6;
}

.win-message p, .game-over-message p {
    margin-bottom: var(--margin-sm);
}

.win-message p:last-child, .game-over-message p:last-child {
    margin-bottom: 0;
}

.win-message strong, .game-over-message strong {
    color: var(--primary-blue);
    font-size: 1.2em;
}

.spotify-link-container {
    margin-top: var(--margin-md);
}

.spotify-link {
    display: inline-block; /* Make it a block so padding/margin applies consistently */
    padding: 8px 15px; /* Add some padding for clickable area */
    background-color: #1DB954; /* Spotify Green */
    color: #ffffff;
    border-radius: var(--border-radius-sm);
    text-decoration: none;
    font-weight: 600;
    transition: background-color 0.3s ease, transform 0.2s ease, box-shadow 0.2s ease;
}

.spotify-link:hover {
    background-color: #1ed760; /* Lighter Spotify Green */
    transform: translateY(-2px);
    box-shadow: 0 4px 10px rgba(29, 185, 84, 0.3);
}

/* Utility Class for JavaScript toggling */
.hidden {
    display: none !important; /* Forces element to be hidden */
}

/* Animations */
@keyframes fadeIn {
    from { opacity: 0; }
    to { opacity: 1; }
}

@keyframes fadeInUp {
    from {
        opacity: 0;
        transform: translateY(20px);
    }
    to {
        opacity: 1;
        transform: translateY(0);
    }
}

/* --- Mobile Responsiveness --- */
@media (max-width: 600px) {
    .game-container {
        padding: var(--padding-md);
        border-radius: var(--border-radius-md);
    }

    h1 {
        font-size: 1.8em;
        margin-bottom: var(--margin-md);
    }

    .instruction-text {
        font-size: 1em;
    }

    .album-title {
        font-size: 1.4em;
        margin: var(--padding-sm) 0 var(--margin-md) 0;
    }

    .text-input {
        padding: var(--padding-sm);
        margin-bottom: var(--margin-sm);
    }

    .button-group {
        flex-direction: column;
        gap: var(--padding-sm);
    }

    .game-button {
        width: 100%;
        max-width: none;
    }

    #refresh-button.primary-button {
        margin-top: var(--margin-sm);
    }

    .feedback-text {
        font-size: 0.9em;
        margin-top: var(--padding-sm);
    }

    .score-text, .lives-text {
        font-size: 1em;
    }

    .game-info {
        margin-bottom: var(--margin-sm);
    }

    .win-message, .game-over-message {
        padding: var(--padding-md);
        font-size: 0.95em;
    }

    .win-message p, .game-over-message p {
        margin-bottom: var(--padding-sm);
    }

    .spotify-link-container {
        margin-top: var(--margin-sm);
    }
}

@media (max-width: 400px) {
    .game-container {
        padding: var(--padding-sm);
    }
    h1 {
        font-size: 1.6em;
    }
    .album-title {
        font-size: 1.2em;
    }
}